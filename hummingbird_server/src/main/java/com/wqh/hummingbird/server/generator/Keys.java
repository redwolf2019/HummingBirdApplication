/*
 * This file is generated by jOOQ.
 */
package com.wqh.hummingbird.server.generator;


import com.wqh.hummingbird.server.generator.tables.DataPoint;
import com.wqh.hummingbird.server.generator.tables.Device;
import com.wqh.hummingbird.server.generator.tables.DeviceType;
import com.wqh.hummingbird.server.generator.tables.records.DataPointRecord;
import com.wqh.hummingbird.server.generator.tables.records.DeviceRecord;
import com.wqh.hummingbird.server.generator.tables.records.DeviceTypeRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>hummingbird_db</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<DataPointRecord, Long> IDENTITY_DATA_POINT = Identities0.IDENTITY_DATA_POINT;
    public static final Identity<DeviceRecord, Long> IDENTITY_DEVICE = Identities0.IDENTITY_DEVICE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DataPointRecord> KEY_DATA_POINT_PRIMARY = UniqueKeys0.KEY_DATA_POINT_PRIMARY;
    public static final UniqueKey<DataPointRecord> KEY_DATA_POINT_DATA_POINT_DEVICE_TYPE_ID_POINT_UINDEX = UniqueKeys0.KEY_DATA_POINT_DATA_POINT_DEVICE_TYPE_ID_POINT_UINDEX;
    public static final UniqueKey<DeviceRecord> KEY_DEVICE_PRIMARY = UniqueKeys0.KEY_DEVICE_PRIMARY;
    public static final UniqueKey<DeviceRecord> KEY_DEVICE_DEVICE_CODE_UINDEX = UniqueKeys0.KEY_DEVICE_DEVICE_CODE_UINDEX;
    public static final UniqueKey<DeviceRecord> KEY_DEVICE_DEVICE_NAME_UINDEX = UniqueKeys0.KEY_DEVICE_DEVICE_NAME_UINDEX;
    public static final UniqueKey<DeviceTypeRecord> KEY_DEVICE_TYPE_PRIMARY = UniqueKeys0.KEY_DEVICE_TYPE_PRIMARY;
    public static final UniqueKey<DeviceTypeRecord> KEY_DEVICE_TYPE_DEVICE_TYPE_NAME_UINDEX = UniqueKeys0.KEY_DEVICE_TYPE_DEVICE_TYPE_NAME_UINDEX;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<DataPointRecord, Long> IDENTITY_DATA_POINT = Internal.createIdentity(DataPoint.DATA_POINT, DataPoint.DATA_POINT.ID);
        public static Identity<DeviceRecord, Long> IDENTITY_DEVICE = Internal.createIdentity(Device.DEVICE, Device.DEVICE.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<DataPointRecord> KEY_DATA_POINT_PRIMARY = Internal.createUniqueKey(DataPoint.DATA_POINT, "KEY_data_point_PRIMARY", DataPoint.DATA_POINT.ID);
        public static final UniqueKey<DataPointRecord> KEY_DATA_POINT_DATA_POINT_DEVICE_TYPE_ID_POINT_UINDEX = Internal.createUniqueKey(DataPoint.DATA_POINT, "KEY_data_point_data_point_device_type_id_point_uindex", DataPoint.DATA_POINT.DEVICE_TYPE_ID, DataPoint.DATA_POINT.DATA_POINT_);
        public static final UniqueKey<DeviceRecord> KEY_DEVICE_PRIMARY = Internal.createUniqueKey(Device.DEVICE, "KEY_device_PRIMARY", Device.DEVICE.ID);
        public static final UniqueKey<DeviceRecord> KEY_DEVICE_DEVICE_CODE_UINDEX = Internal.createUniqueKey(Device.DEVICE, "KEY_device_device_code_uindex", Device.DEVICE.CODE);
        public static final UniqueKey<DeviceRecord> KEY_DEVICE_DEVICE_NAME_UINDEX = Internal.createUniqueKey(Device.DEVICE, "KEY_device_device_name_uindex", Device.DEVICE.NAME);
        public static final UniqueKey<DeviceTypeRecord> KEY_DEVICE_TYPE_PRIMARY = Internal.createUniqueKey(DeviceType.DEVICE_TYPE, "KEY_device_type_PRIMARY", DeviceType.DEVICE_TYPE.ID);
        public static final UniqueKey<DeviceTypeRecord> KEY_DEVICE_TYPE_DEVICE_TYPE_NAME_UINDEX = Internal.createUniqueKey(DeviceType.DEVICE_TYPE, "KEY_device_type_device_type_name_uindex", DeviceType.DEVICE_TYPE.NAME);
    }
}
