/*
 * This file is generated by jOOQ.
 */
package com.wqh.hummingbird.server.generator.tables;


import com.wqh.hummingbird.server.generator.HummingbirdDb;
import com.wqh.hummingbird.server.generator.Indexes;
import com.wqh.hummingbird.server.generator.Keys;
import com.wqh.hummingbird.server.generator.tables.records.DeviceTypeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UShort;


/**
 * 设备类型表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeviceType extends TableImpl<DeviceTypeRecord> {

    private static final long serialVersionUID = 1081478806;

    /**
     * The reference instance of <code>hummingbird_db.device_type</code>
     */
    public static final DeviceType DEVICE_TYPE = new DeviceType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DeviceTypeRecord> getRecordType() {
        return DeviceTypeRecord.class;
    }

    /**
     * The column <code>hummingbird_db.device_type.id</code>. 设备类型ID
     */
    public final TableField<DeviceTypeRecord, UShort> ID = createField("id", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false), this, "设备类型ID");

    /**
     * The column <code>hummingbird_db.device_type.name</code>. 设备类型名称
     */
    public final TableField<DeviceTypeRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "设备类型名称");

    /**
     * The column <code>hummingbird_db.device_type.description</code>. 描述
     */
    public final TableField<DeviceTypeRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(255), this, "描述");

    /**
     * Create a <code>hummingbird_db.device_type</code> table reference
     */
    public DeviceType() {
        this(DSL.name("device_type"), null);
    }

    /**
     * Create an aliased <code>hummingbird_db.device_type</code> table reference
     */
    public DeviceType(String alias) {
        this(DSL.name(alias), DEVICE_TYPE);
    }

    /**
     * Create an aliased <code>hummingbird_db.device_type</code> table reference
     */
    public DeviceType(Name alias) {
        this(alias, DEVICE_TYPE);
    }

    private DeviceType(Name alias, Table<DeviceTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private DeviceType(Name alias, Table<DeviceTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("设备类型表"));
    }

    public <O extends Record> DeviceType(Table<O> child, ForeignKey<O, DeviceTypeRecord> key) {
        super(child, key, DEVICE_TYPE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return HummingbirdDb.HUMMINGBIRD_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DEVICE_TYPE_DEVICE_TYPE_NAME_UINDEX, Indexes.DEVICE_TYPE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DeviceTypeRecord> getPrimaryKey() {
        return Keys.KEY_DEVICE_TYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DeviceTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<DeviceTypeRecord>>asList(Keys.KEY_DEVICE_TYPE_PRIMARY, Keys.KEY_DEVICE_TYPE_DEVICE_TYPE_NAME_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DeviceType as(String alias) {
        return new DeviceType(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DeviceType as(Name alias) {
        return new DeviceType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DeviceType rename(String name) {
        return new DeviceType(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DeviceType rename(Name name) {
        return new DeviceType(name, null);
    }
}
